<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>双指针 on Max的blog</title>
    <link>https://maxjohnxiang.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/</link>
    <description>Recent content in 双指针 on Max的blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 12 Nov 2019 23:31:32 +0800</lastBuildDate><atom:link href="https://maxjohnxiang.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Remove Nth Node From End of List</title>
      <link>https://maxjohnxiang.github.io/posts/remove-nth-node-from-end-of-list/</link>
      <pubDate>Tue, 12 Nov 2019 23:31:32 +0800</pubDate>
      
      <guid>https://maxjohnxiang.github.io/posts/remove-nth-node-from-end-of-list/</guid>
      <description>Description  Given a linked list, remove the n-th node from the end of list and return its head.
Example:
Given linked list: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5, and n = 2.
After removing the second node from the end, the linked list becomes 1-&amp;gt;2-&amp;gt;3-&amp;gt;5.
Note: Given n will always be valid.
 Thinking 因为链表是没有下标的， 所以找到第n 个， 或者倒数第n个， 或者找中间位置，都必须通过快慢指针实现。
  找到第n个，快指针先走length - n个位置 , 再快慢指针一起走，等快指针走完了， 慢指针刚好走了n个。 找到中间位置， 同时间开始走，快指针速度是满指针两倍， 快指针走完了, 满指针走到中间 找到第n个位置， 快指针走n个位置，再快慢指针一起走， 等快指针走完了，满指正走到倒数第n个   Solution func removeNthFromEnd(head *ListNode, n int) *ListNode { start := &amp;amp;ListNode{} slow, fast := start, start start.</description>
    </item>
    
    <item>
      <title>[11] Container With Most Water</title>
      <link>https://maxjohnxiang.github.io/posts/11.contrinerwithmostwater/</link>
      <pubDate>Tue, 12 Nov 2019 15:09:23 +0800</pubDate>
      
      <guid>https://maxjohnxiang.github.io/posts/11.contrinerwithmostwater/</guid>
      <description>Question  Given n non-negative integers a1, a2, &amp;hellip;, an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.
Note: You may not slant the container and n is at least 2.</description>
    </item>
    
  </channel>
</rss>
